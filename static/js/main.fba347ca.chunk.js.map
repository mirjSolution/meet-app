{"version":3,"sources":["Event.js","EventList.js","Alert.js","CitySearch.js","NumberOfEvents.js","EventGenre.js","mock-data.js","api.js","App.js","reportWebVitals.js","serviceWorkerRegistration.js","index.js"],"names":["Event","state","showHideDetails","handleShowHideButton","setState","event","this","props","className","summary","start","dateTime","location","target","rel","href","htmlLink","description","onClick","Component","EventList","events","map","id","Alert","getStyle","color","style","text","InfoAlert","ErrorAlert","CitySearch","query","suggestions","showSuggestions","handleItemClicked","suggestion","infoText","updateEvents","handleInputChanged","value","locations","filter","toUpperCase","indexOf","length","type","onChange","onFocus","display","NumberOfEvents","eventCount","handleEventInputChanged","errorText","htmlFor","name","placeholder","EventGenre","useEffect","setData","getData","useState","data","eventSummary","genre","split","includes","height","width","cx","cy","labelLine","outerRadius","fill","dataKey","label","percent","toFixed","mockData","kind","etag","status","created","updated","creator","email","self","organizer","timeZone","end","recurringEventId","originalStartTime","iCalUID","sequence","reminders","useDefault","extractLocations","Set","getAccessToken","a","accessToken","localStorage","getItem","checkToken","tokenCheck","error","removeItem","searchParams","URLSearchParams","window","search","get","code","axios","results","authUrl","getToken","fetch","then","res","json","catch","result","getEvents","NProgress","navigator","onLine","startsWith","done","JSON","parse","token","removeQuery","url","setItem","stringify","history","pushState","pathname","newurl","protocol","host","encodeCode","encodeURIComponent","access_token","App","number","city","shift","locationEvents","slice","mounted","infoAlert","margin","top","right","bottom","left","allowDecimals","cursor","strokeDasharray","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","headers","response","contentType","ready","unregister","reload","checkValidServiceWorker","atatus","install"],"mappings":"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","file":"static/js/main.fba347ca.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Event extends Component {\n  state = {\n    showHideDetails: false,\n  };\n\n  handleShowHideButton = () => {\n    if (this.state.showHideDetails === true) {\n      this.setState({ showHideDetails: false });\n    } else {\n      this.setState({ showHideDetails: true });\n    }\n  };\n\n  render() {\n    const { event } = this.props;\n    return (\n      <div className='event-container'>\n        <h1 className='name'>{event.summary}</h1>\n        <p>{event.start ? event.start.dateTime : ''}</p>\n        <p className='locations'>{event.location}</p>\n\n        {this.state.showHideDetails && (\n          <div className='event-details'>\n            <h2>About event:</h2>\n            <a target='_blank' rel='noreferrer' href={event.htmlLink}>\n              See Details on Google Calendar\n            </a>\n            <p>{event.description}</p>\n          </div>\n        )}\n\n        <button\n          className='show-hide-btn'\n          onClick={() => this.handleShowHideButton()}\n        >\n          {!this.state.showHideDetails ? 'Show Details' : 'Hide Details'}\n        </button>\n      </div>\n    );\n  }\n}\nexport default Event;\n","import React, { Component } from 'react';\nimport Event from './Event';\n\nclass EventList extends Component {\n  render() {\n    const { events } = this.props;\n    return (\n      <ul className='EventList'>\n        {events.map((event) => (\n          <li key={event.id}>\n            <Event event={event} />\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nexport default EventList;\n","import React, { Component } from 'react';\n\nclass Alert extends Component {\n  constructor(props) {\n    super(props);\n    this.color = null;\n  }\n\n  getStyle = () => {\n    return {\n      color: this.color,\n    };\n  };\n\n  render() {\n    return (\n      <div className='Alert'>\n        <p style={this.getStyle()}>{this.props.text}</p>\n      </div>\n    );\n  }\n}\n\nclass InfoAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = 'blue';\n  }\n}\n\nclass ErrorAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = 'red';\n  }\n}\n\nexport { InfoAlert, ErrorAlert };\n","import React, { Component } from 'react';\nimport { InfoAlert } from './Alert';\n\nclass CitySearch extends Component {\n  state = {\n    query: '',\n    suggestions: [],\n    showSuggestions: false,\n  };\n\n  handleItemClicked = (suggestion) => {\n    this.setState({\n      query: suggestion,\n      showSuggestions: false,\n      infoText: '',\n    });\n\n    this.props.updateEvents(suggestion, 0);\n  };\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    const suggestions = this.props.locations.filter((location) => {\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n    });\n    if (suggestions.length === 0) {\n      this.setState({\n        query: value,\n        suggestions: [],\n        infoText:\n          'We can not find the city you are looking for. Please try another city',\n      });\n    } else {\n      return this.setState({\n        query: value,\n        suggestions,\n        infoText: '',\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className='CitySearch'>\n        <input\n          type='text'\n          className='city'\n          value={this.state.query}\n          onChange={this.handleInputChanged}\n          onFocus={() => {\n            this.setState({ showSuggestions: true });\n          }}\n        />\n        {this.state.suggestions.length >= 1 ? (\n          <ul\n            className='suggestions'\n            style={this.state.showSuggestions ? {} : { display: 'none' }}\n          >\n            {this.state.suggestions.map((suggestion) => (\n              <li\n                key={suggestion}\n                onClick={() => this.handleItemClicked(suggestion)}\n              >\n                {suggestion}\n              </li>\n            ))}\n            <li onClick={() => this.handleItemClicked('all')}>\n              <b>See all cities</b>\n            </li>\n          </ul>\n        ) : (\n          <InfoAlert text={this.state.infoText} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default CitySearch;\n","import React, { Component } from 'react';\nimport { ErrorAlert } from './Alert';\n\nclass NumberOfEvents extends Component {\n  state = {\n    eventCount: this.props.eventCount,\n  };\n\n  handleEventInputChanged = (event) => {\n    const eventCount = event.target.value;\n    if (eventCount < 1) {\n      return this.setState({\n        eventCount: '',\n        errorText: `Select number between 1 and 32`,\n      });\n    } else if (eventCount > 32) {\n      return this.setState({\n        eventCount: '',\n        errorText: `Select number between 1 and 32`,\n      });\n    } else {\n      this.setState({\n        eventCount,\n        errorText: '',\n      });\n      this.props.updateEvents('', eventCount);\n    }\n  };\n\n  render() {\n    return (\n      <div className='event-number'>\n        <label htmlFor='numberOfEvent'>Number of Events</label>\n        <input\n          type='number'\n          name='numberOfEvent'\n          className='event-number-input'\n          placeholder='Enter Number of Events'\n          value={this.state.eventCount}\n          onChange={this.handleEventInputChanged}\n        />\n        <ErrorAlert text={this.state.errorText} />\n      </div>\n    );\n  }\n}\n\nexport default NumberOfEvents;\n","import React, { useEffect, useState } from 'react';\nimport { PieChart, Pie, ResponsiveContainer, Cell } from 'recharts';\n\nconst EventGenre = ({ events }) => {\n  useEffect(() => {\n    setData(() => getData());\n  }, [events]);\n\n  const [data, setData] = useState([]);\n\n  const getData = () => {\n    const genres = ['React', 'JavaScript', 'Node', 'jQuery', 'AngularJS'];\n    const summary = events.map((event) => {\n      const eventSummary = event.summary;\n      return { eventSummary };\n    });\n\n    const data = genres.map((genre) => {\n      const name = genre;\n\n      const value = summary.filter((summary) =>\n        summary.eventSummary.split(' ').includes(name)\n      ).length;\n\n      return { name, value };\n    });\n\n    return data;\n  };\n\n  return (\n    <ResponsiveContainer height={300}>\n      <PieChart width={730} height={250}>\n        <Pie\n          data={data}\n          cx={120}\n          cy={130}\n          labelLine={false}\n          outerRadius={80}\n          fill='#8884d8'\n          dataKey='value'\n          label={({ name, percent }) =>\n            `${name} ${(percent * 100).toFixed(0)}%`\n          }\n        ></Pie>\n      </PieChart>\n    </ResponsiveContainer>\n  );\n};\n\nexport default EventGenre;\n","const mockData = [\n  {\n    kind: 'calendar#event',\n    etag: '\"3181161784712000\"',\n    id: '4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z',\n    status: 'confirmed',\n    htmlLink:\n      'https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20',\n    created: '2020-05-19T19:17:46.000Z',\n    updated: '2020-05-27T12:01:32.356Z',\n    summary: 'Learn JavaScript',\n    description:\n      'Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.',\n    location: 'London, UK',\n    creator: {\n      email: 'fullstackwebdev@careerfoundry.com',\n      self: true,\n    },\n    organizer: {\n      email: 'fullstackwebdev@careerfoundry.com',\n      self: true,\n    },\n    start: {\n      dateTime: '2020-05-19T16:00:00+02:00',\n      timeZone: 'Europe/Berlin',\n    },\n    end: {\n      dateTime: '2020-05-19T17:00:00+02:00',\n      timeZone: 'Europe/Berlin',\n    },\n    recurringEventId: '4eahs9ghkhrvkld72hogu9ph3e',\n    originalStartTime: {\n      dateTime: '2020-05-19T16:00:00+02:00',\n      timeZone: 'Europe/Berlin',\n    },\n    iCalUID: '4eahs9ghkhrvkld72hogu9ph3e@google.com',\n    sequence: 0,\n    reminders: {\n      useDefault: true,\n    },\n  },\n  {\n    kind: 'calendar#event',\n    etag: '\"3181159875584000\"',\n    id: '3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z',\n    status: 'confirmed',\n    htmlLink:\n      'https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20',\n    created: '2020-05-19T19:14:30.000Z',\n    updated: '2020-05-27T11:45:37.792Z',\n    summary: 'React is Fun',\n    description:\n      'Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. ',\n    location: 'Berlin, Germany',\n    creator: {\n      email: 'fullstackwebdev@careerfoundry.com',\n      self: true,\n    },\n    organizer: {\n      email: 'fullstackwebdev@careerfoundry.com',\n      self: true,\n    },\n    start: {\n      dateTime: '2020-05-20T14:00:00+02:00',\n      timeZone: 'Europe/Berlin',\n    },\n    end: {\n      dateTime: '2020-05-20T15:00:00+02:00',\n      timeZone: 'Europe/Berlin',\n    },\n    recurringEventId: '3qtd6uscq4tsi6gc7nmmtpqlct',\n    originalStartTime: {\n      dateTime: '2020-05-20T14:00:00+02:00',\n      timeZone: 'Europe/Berlin',\n    },\n    iCalUID: '3qtd6uscq4tsi6gc7nmmtpqlct@google.com',\n    sequence: 0,\n    reminders: {\n      useDefault: true,\n    },\n  },\n];\n\nexport { mockData };\n","/**\n *\n * @param {*} events:\n * The following function should be in the “api.js” file.\n * This function takes an events array, then uses map to create a new array with only locations.\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\n * The Set will remove all duplicates from the array.\n */\nimport { mockData } from './mock-data';\nimport axios from 'axios';\nimport NProgress from 'nprogress';\nimport './nprogress.css';\n\nexport const extractLocations = (events) => {\n  var extractLocations = events.map((event) => event.location);\n  var locations = [...new Set(extractLocations)];\n  return locations;\n};\n\nexport const getAccessToken = async () => {\n  const accessToken = localStorage.getItem('access_token');\n\n  const tokenCheck = accessToken && (await checkToken(accessToken));\n\n  if (!accessToken || tokenCheck.error) {\n    await localStorage.removeItem('access_token');\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = await searchParams.get('code');\n    if (!code) {\n      const results = await axios.get(\n        'https://zqxux34dr8.execute-api.ca-central-1.amazonaws.com/dev/api/get-auth-url'\n      );\n      const { authUrl } = results.data;\n      return (window.location.href = authUrl);\n    }\n    return code && getToken(code);\n  }\n  return accessToken;\n};\n\nconst checkToken = async (accessToken) => {\n  const result = await fetch(\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n  )\n    .then((res) => res.json())\n    .catch((error) => error.json());\n\n  return result;\n};\n\nexport const getEvents = async () => {\n  NProgress.start();\n\n  if (\n    !navigator.onLine &&\n    !window.location.href.startsWith('http://localhost')\n  ) {\n    const events = localStorage.getItem('lastEvents');\n    NProgress.done();\n    return JSON.parse(events).events;\n  }\n\n  if (window.location.href.startsWith('http://localhost')) {\n    NProgress.done();\n    return mockData;\n  }\n\n  const token = await getAccessToken();\n\n  if (token) {\n    removeQuery();\n    const url = `https://zqxux34dr8.execute-api.ca-central-1.amazonaws.com/dev/api/get-events/${token}`;\n    const result = await axios.get(url);\n\n    if (result.data) {\n      var locations = extractLocations(result.data.events);\n      localStorage.setItem('lastEvents', JSON.stringify(result.data));\n      localStorage.setItem('locations', JSON.stringify(locations));\n    }\n\n    NProgress.done();\n    return result.data.events;\n  }\n};\n\nconst removeQuery = () => {\n  if (window.history.pushState && window.location.pathname) {\n    var newurl =\n      window.location.protocol +\n      '//' +\n      window.location.host +\n      window.location.pathname;\n    window.history.pushState('', '', newurl);\n  } else {\n    newurl = window.location.protocol + '//' + window.location.host;\n    window.history.pushState('', '', newurl);\n  }\n};\n\nconst getToken = async (code) => {\n  const encodeCode = encodeURIComponent(code);\n  const { access_token } = await fetch(\n    `https://zqxux34dr8.execute-api.ca-central-1.amazonaws.com/dev/api/token/${encodeCode}`\n  )\n    .then((res) => {\n      return res.json();\n    })\n    .catch((error) => error);\n\n  access_token && localStorage.setItem('access_token', access_token);\n\n  return access_token;\n};\n","import React, { Component } from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport EventGenre from './EventGenre';\nimport { InfoAlert } from './Alert';\nimport { getEvents, extractLocations } from './api';\nimport {\n  ScatterChart,\n  Scatter,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n} from 'recharts';\n\nclass App extends Component {\n  state = {\n    events: [],\n    locations: [],\n    eventCount: 5,\n  };\n\n  getData = () => {\n    const { locations, events } = this.state;\n    const data = locations.map((location) => {\n      const number = events.filter((event) => event.location === location)\n        .length;\n      const city = location.split(' ').shift();\n      return { city, number };\n    });\n    return data;\n  };\n\n  updateEvents = (location, eventCount) => {\n    let locationEvents;\n    getEvents().then((events) => {\n      locationEvents = events;\n      if (location === 'all' && eventCount === 0) {\n        locationEvents = events;\n      } else if (location !== 'all' && eventCount === 0) {\n        locationEvents = events.filter((event) => event.location === location);\n      } else if (location === '' && eventCount > 0) {\n        locationEvents = events.slice(0, eventCount);\n      }\n      this.setState({\n        events: locationEvents,\n        eventCount,\n      });\n    });\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    // Try to load localEvent\n    if (!navigator.onLine) {\n      this.setState({\n        infoAlert:\n          'You are not connected from internet(data may not be up to date)',\n      });\n    } else {\n      this.setState({\n        infoAlert: '',\n      });\n    }\n    getEvents().then((events) => {\n      if (this.mounted) {\n        this.setState({\n          events: events.slice(0, this.state.eventCount),\n          locations: extractLocations(events),\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    const data = [\n      { city: 'Dubai', number: 2 },\n      { city: 'Toronto,', number: 2 },\n      { city: 'Santiago,', number: 3 },\n      { city: 'Tokyo,', number: 2 },\n    ];\n\n    return (\n      <div className='App'>\n        <h1>Meet App</h1>\n        <h4>Choose your nearest city</h4>\n        <CitySearch\n          locations={this.state.locations}\n          updateEvents={this.updateEvents}\n          eventCount={this.state.eventCount}\n        />\n        <NumberOfEvents\n          eventCount={this.state.eventCount}\n          updateEvents={this.updateEvents}\n        />\n        <InfoAlert text={this.state.infoAlert} />\n\n        <div className='data-vis-wrapper'>\n          <EventGenre events={this.state.events} />\n          <ResponsiveContainer height={400}>\n            <ScatterChart margin={{ top: 20, right: 20, bottom: 20, left: 0 }}>\n              <CartesianGrid />\n              <XAxis type='category' dataKey='city' name='city' />\n              <YAxis\n                allowDecimals={false}\n                type='number'\n                dataKey='number'\n                name='number of events'\n              />\n              <Tooltip cursor={{ strokeDasharray: '3 3' }} />\n              <Scatter\n                data={\n                  !window.location.href.startsWith('http://localhost')\n                    ? this.getData()\n                    : data\n                }\n                fill='#8884d8'\n              />\n            </ScatterChart>\n          </ResponsiveContainer>\n        </div>\n        <EventList events={this.state.events} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from './serviceWorkerRegistration';\nimport * as atatus from 'atatus-spa';\n// import { notify } from 'atatus-spa';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n// serviceWorker.unregister();\nserviceWorker.register();\natatus.config('09c879730ef74076b38bef72a6b338f4').install();\n// notify();\n// notify(new Error('Test Atatus Setup'));\n"],"sourceRoot":""}